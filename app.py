from fastapi import FastAPI, WebSocket
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import subprocess
import asyncio
import concurrent.futures



class MyURL(BaseModel):
    url: str

app = FastAPI(
     title="VulScan"
)

# origins = ["*"]

# app.add_middleware(
    # CORSMiddleware,
    # allow_origins=origins,
    # allow_credentials=True,
    # allow_methods=["*"],
    # allow_headers=["*"],
# )

@app.get("/")
def index():
    return "Hello World"
    
@app.post("/whois")
def whois(myurl:MyURL):
	process = subprocess.Popen(['whois', myurl.url ,'-H'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	out, err = process.communicate()
	return out
	
@app.post("/whatweb")
def whatweb(myurl:MyURL):
	process = subprocess.Popen(['whatweb', myurl.url], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	out, err = process.communicate()
	return out

@app.post("/scan")
def get_student(item:MyURL):
    return item.url

          


@app.websocket("/ws")
async def websocket_endpoint(websocket: WebSocket):
    await websocket.accept()
    try:
        await websocket.send_text("Hello")
        process = subprocess.Popen(
             "wapiti http://128.198.49.198:8102/mutillidae --skip-tests=exec,sql,xss", 
            #"nikto -h http://128.198.49.198:8102/mutillidae",
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            shell=True,
        )
        while True:
            output = process.stdout.readline()
            if output == '' and process.poll() is not None:
                break
            if output:
                print(output)
                await websocket.send_text(output)
            
            
            
            
    except Exception as e:
        await websocket.send_text(str(e))
    finally:
        process.kill()


